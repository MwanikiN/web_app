name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    container:
      image: amazon/aws-cli:2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        run: |
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "region = us-east-1" >> ~/.aws/credentials

      - name: Build and push Docker image to AWS ECR
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/456949466086.dkr.ecr.us-east-1.amazonaws.com/web_app/web_app .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/456949466086.dkr.ecr.us-east-1.amazonaws.com/web_app/web_app

      - name: Upload Docker Compose file to S3
        run: aws s3 cp docker-compose.yml s3://nm-0728006771-bucket/

      - name: Deploy to EC2 instance
        run: |
          # Example: SSH into your EC2 instance and pull the latest Docker image
          ssh -i path/to/your/private/key ec2-user@your-ec2-instance-ip "docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-ecr-repository/your-flask-app"
          # Example: Update Docker Compose and restart the application
          ssh -i path/to/your/private/key ec2-user@your-ec2-instance-ip "aws s3 cp s3://your-s3-bucket-name/docker-compose.yml /path/to/your/app && docker-compose -f /path/to/your/app/docker-compose.yml up -d"
